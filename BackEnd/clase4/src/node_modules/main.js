
import http from 'node:http'
import express from 'express'
import fs from 'fs/promises'

// Construccion de servidores: usos de framework : express Js, 

//acciones predeterminadas: crear la carpeta src, y el archivo main depara punto de accesso, luego : 
// npm i -y 
// npm install express
//la libreria o modulo http que crea un servidor, osea se mantiene en funcionamiento indefinidamente que recibe preguntas en forma de eventos(peticiones)
// y responde mediante un callback
const serverHTTP=http.createServer((request,response)=>{
//response es la respuesta al request que llego en forma de callback
    response.end('<h1>HOLA</h1>')
})


//las request se comunican por puertos 
/*
    MAC adress: id de la compu, viene de fabrica (NO NOS INTERESA)
    IP adress: id de la compu dentro de una red
    Puerto(port) : id de la aplicacion dentro de una computadora para cuando mandes una peticion, pueda elegir a que puerto contestar
*/

//para enviarle una peticion , es neceesario el IP y el puerto 

//poner el servidor a "escuchar", el listen se pueden enviar como parametros el puerto, el ip y otros


const app=express()
//de esta forma express no hace falta importar el fs
//para enviar paginas directamente response.sendFile('ruta', carpeta de vistas)
// y para enviar json response.json(objeto)
app.get('/persona', async (request,response)=>{
        //response es la respuesta al request que llego en forma de callback
            response.end('<h1>HOLA</h1>')
})
app.get('/',async (request,response)=>{
        //response es la respuesta al request que llego en forma de callback
            response.end('NADA')
})


//serverHTTP.listen(8080)
app.listen(8080)

//protocolos HTTP:
/* en archivos CRUD:
C: POST
R: GET
U: PUT
D: DELEATE*/

// para poder manejar la informacion que viene de un formulario   app.use(express.urlencoded({extended:true}))

app.all('*',(req,resp)=>{
    //el method , cada vez que envia una peticion 
    console.log(req.method)
})